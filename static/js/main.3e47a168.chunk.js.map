{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","currentTime","Date","toLocaleTimeString","timer","setInterval","setState","console","log","this","prevProps","prevState","snapshot","name","props","clearInterval","React","Component","App","isClockVisible","clockName","changeName","Math","round","random","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,sBAF5B,EAKEC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CAAEL,aAAa,IAAIC,MAAOC,uBAExCI,QAAQC,IAAI,EAAKR,MAAMC,eACtB,KATL,kEAYI,OAAOQ,KAAKL,QAZhB,yCAeqBM,EAAWC,EAAWC,GACnCF,EAAUG,OAASJ,KAAKK,MAAMD,MAEhCN,QAAQC,IAAR,qCAA0CE,EAAUG,KAApD,gBAAgEJ,KAAKK,MAAMD,SAlBjF,6CAuBIE,cAAcN,KAAKL,SAvBvB,+BA0BY,IACAH,EAAgBQ,KAAKT,MAArBC,YAER,OACE,2BACG,iBACAA,OAhCT,GAA2Be,IAAMC,WCEpBC,G,MAAb,4MACElB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,WAAa,WACP,EAAKrB,MAAMmB,gBACb,EAAKb,SAAS,CACZc,UAAWE,KAAKC,MAAsB,GAAhBD,KAAKE,aATnC,uDAcY,IAAD,SAC+Bf,KAAKT,MAAnCmB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKK,UAAU,OACb,2CACCN,GAAkB,kBAAC,EAAD,CAAON,KAAMO,IAEhC,4BACEM,QAAS,WACP,EAAKpB,SAAS,CAAEa,gBAAgB,KAElCQ,KAAK,UAJP,cASA,4BACED,QAAS,WACP,EAAKpB,SAAS,CAAEa,gBAAgB,KAElCQ,KAAK,UAJP,cASA,4BACED,QAASjB,KAAKY,WACdM,KAAK,UAFP,wBAxCR,GAAyBX,IAAMC,YCD/BW,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3e47a168.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    currentTime: new Date().toLocaleTimeString(),\n  }\n\n  timer = setInterval(() => {\n    this.setState({ currentTime: new Date().toLocaleTimeString() });\n    // eslint-disable-next-line\n    console.log(this.state.currentTime);\n  }, 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console,max-len\n      console.log(`The Clock was renamed from ${prevProps.name}  to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return (\n      <p>\n        {'Current time: '}\n        {currentTime}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  changeName = () => {\n    if (this.state.isClockVisible) {\n      this.setState({\n        clockName: Math.round(Math.random() * 10),\n      });\n    }\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n\n        <button\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n          type=\"button\"\n        >\n          Show Clock\n        </button>\n\n        <button\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n          type=\"button\"\n        >\n          Hide Clock\n        </button>\n\n        <button\n          onClick={this.changeName}\n          type=\"button\"\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}